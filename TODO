DONE

    Hacked up a really simple data structure. Not implement

    Add counters to print out at the end of the packet encryption test

    Make sure everything is working OK

    Seems fine.

    Fix the salt timeout it's broken

    Search through additional todos. Seems fine. Added some more notes.

    Specifically, I want a way to genericalyl abort packet read at the TYPE level, if that type is not allowed for some reason.

    eg. a type that the server doesn't expect, *or* an unencrypted packet for a type that should be encrypted and so on.

    This part is probably important to do before saying the packet encryption part is finished, because that's a key part of being secure.

    Don't let the client just get in under the covers with an unencrypted packet!

    Doing this now...

    OK. This is pretty clean. I like the PacketInfo approach for extending read and write packets.

    Get the code compiling on windows (install sodium)

    Wow. It's totally fucked up again. How?!

    First step, disable sodium by implementing #define YOJIBO_SECURE

    If this is not defined, you can strip out all the security support.

    Got the security stripped out and got everything working on Mac and Linux.

    PRIx64 WTF. gross...

    Now back to windows.

    Repaired the Visual Studio installation. Really I don't have any other explanation for why it is busted other than corruption.

    I don't know what is going on here.

    WINDOWS

    It's fucked up because I included the sockets implementation, which probably needs more headers.

    Without the sockets class it's fine. What else needs to be included for sockets?

    Actually, it was some weird ass s_addr #define shit. Ugh. Fixed.

TODO

    Now turn back on YOJIMBO_SECURE and get it working under linux.





    -----------

    Get the code compiling on linux (install sodium)

    Package up something for supporters this month. It should make them happy, but be low key about it.

    ----------
